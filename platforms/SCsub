#!/usr/bin/env python

from compat import open_utf8

Import("environment")

environment.platform_sources = []

# Register platform-exclusive APIs
reg_apis_inc = '#include "register_platform_apis.h"\n'
reg_apis = "void register_platform_apis() {\n"
unreg_apis = "void unregister_platform_apis() {\n"

for platform in sorted(glob.glob("*")):
    if not os.path.isdir(platform) or not os.path.exists(platform + "/api/api.cpp"):
        continue
    platform_dir = environment.Dir(platform)
    environment.add_source_files(environment.platform_sources, platform + "/api/api.cpp")
    reg_apis += "\tregister_" + platform + "_api();\n"
    unreg_apis += "\tunregister_" + platform + "_api();\n"
    reg_apis_inc += '#include "' + platform + '/api/api.h"\n'
reg_apis_inc += "\n"
reg_apis += "}\n\n"
unreg_apis += "}\n"

# NOTE: It is safe to generate this file here, since this is still execute serially
with open_utf8("register_platform_apis.gen.cpp", "w") as f:
    f.write(reg_apis_inc)
    f.write(reg_apis)
    f.write(unreg_apis)

environment.add_source_files(environment.platform_sources, "register_platform_apis.gen.cpp")

lib = environment.add_library("platform", environment.platform_sources)
environment.Prepend(LIBS=[lib])
