name: Build Tests
on: [push, pull_request]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  static-checks:
    name: üìä Static Checks
    runs-on: ubuntu-latest
    env:
      CLANG_FORMAT_VERSION: "17"
      BLACK_VERSION: "23.10"
    steps:
      - name: Checkout Rebel Engine
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo wget -qO- https://apt.llvm.org/llvm-snapshot.gpg.key |
              sudo tee /etc/apt/trusted.gpg.d/apt.llvm.org.asc
          sudo add-apt-repository 'deb http://apt.llvm.org/jammy/  llvm-toolchain-jammy-${{ env.CLANG_FORMAT_VERSION }} main'
          sudo apt-get update
          sudo apt-get install -y \
          recode \
          dos2unix \
          codespell \
          clang-format-${{ env.CLANG_FORMAT_VERSION }}
          sudo update-alternatives --remove-all clang-format
          sudo update-alternatives --install /usr/bin/clang-format clang-format /usr/bin/clang-format-${{ env.CLANG_FORMAT_VERSION }} 100
          python3 -m pip install black==${{ env.BLACK_VERSION }}

      - name: File formatting checks (file_format.sh)
        run: |
          bash tools/scripts/file_format.sh

      - name: Style checks via clang-format (clang_format.sh)
        run: |
          bash tools/scripts/clang_format.sh

      - name: Python style checks via black (black_format.sh)
        run: |
          bash tools/scripts/black_format.sh

      - name: Create patch file
        if: failure()
        run: |
          git diff > static-checks.patch

      - name: Upload patch file
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: patch-files
          path: |
            static-checks.patch

      - name: JavaScript style and documentation checks via ESLint and JSDoc
        run: |
          #JavaScript style and documentation checks
          cd platform/javascript
          npm ci
          npm run lint
          npm run docs -- -d dry-run

      - name: Spelling checks (codespell)
        run: |
          codespell                           \
          -I tools/codespell-ignore-words.txt \
          -x tools/codespell-ignore-lines.txt \
          docs modules/*/docs

      - name: Documentation syntax checks
        run: |
          tools/scripts/rst_from_xml.py --dry-run docs modules
  
  linux-builds:
    name: üêß Linux Builds

  windows-builds:
    name: üèÅ Windows Builds

  android-builds:
    name: ü§ñ Android Builds
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - name: Build Android Rebel Engine Library armv8 64 bit
            os: ubuntu-latest
            artifact: android-engine-library-arm64
            build-options: platform=android dev=yes
            rebel-executable: librebel.android.armv8.so

          - name: Build Android Rebel Engine Library armv7 Neon
            os: ubuntu-latest
            artifact: android-engine-library-arm-neon
            build-options: platform=android dev=yes android_arch=armv7
            rebel-executable: librebel.android.armv7.neon.so

    steps:
      - name: Build Rebel
        uses: madmiraal/RebelBuildAction@v3
        with:
          artifact: ${{ matrix.artifact }}
          build-options: ${{ matrix.build-options }}
          rebel-executable: ${{ matrix.rebel-executable }}

  ios-builds:
    name: üçè iOS Builds

  web-builds
    name: üåê Web Builds
